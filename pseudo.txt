*****BASIC, INSTANT VERSION*****

A user enters a ski resort and clicks submit

that ski resort is matched to a key in our resorts obj

The key returns a value of the latitude and longitude of that resort.

Those coord. are passed into the weather api url

a function gets the snow forecast for that resort for the next 24 hours
    - Open weather API can return the snow accumulation for the past 3 hours.
    - We can check if the accumulation for any three hour period over the next
        24 or 48 hours is greater than a certain amount.
    - Check times by returning the first 8 objects with a unix timestamp 
        greater than or equal to this moment.

    - OPEN WEATHER IS SO INACCURATE IT IS USELESS.


An api is called to the LIFX lightbulb.  
    Depending on how much snow there is forecasted a specific color,
    brightness, and effect will be passed to the light.



*****VERSION WITH A MAP ON THE UI***** 

In this version there is a google map api used on the homepage.

The user can click anywhere on the map

An api call will return the latitude and longitude for wherever they
clicked.

These coordinates will be passed into the weather api

The weather api returns a snow forecast

The snow amount is passed into the light api

The light changes color, brightness, and effect.



*****VERSION WITH NOTIFICATIONS*****

The user can select a resort and a snow level to receive notifications about.

If the snow level forecasted for that resort reaches the threshold specified,
a notification will be sent to the user informing them that the resort is 
forecasted to get that snow level.  

The user's light will also be set to a color, brightness, and effect 
corresponding to the notification.



*****VERSION WITH ALARM*****

The user can select a time to 'wake up'

When this time comes, the app calls the weather api and checks how much 
snow was received OVERNIGHT
    - This version requires an API that can give us historical data or 
        a server that can check the weather throughout the night and store
        how much snow was received each time the api was called

The light is then passed the snow level data to change to a certain color

A notification is sent to the user informing them how much snow was received.





******PSEUDO FOR MAIN APP****** 

A user enters the page and does not sign in.

The user picks a ski resort from the dropdown list.

The weather api is called for that location.
    - The light api is called in the weather ajax call and the light changes
        color for the weather.
    - The default weather conditions are returned in an object.

The weather condtions object is passed into a function to create a display card.
    - The function creates a new card
        - div class='card' and a width
    - create an img tag with class 'card-img-top'
    - Add weather icon url to img `http://openweathermap.org/img/wn/${iconId}@2x.png`
    - append img tag to card
    - create a div with class='card-body'
    loop through the object 
        - Create a div with class='card-text'
        - Create a header for the data type (wind, rain total etc)
        - creae a p tag for the data
        - add the key as header, data as text in p tag.
        - Append header and p tag to card-text div
        - Append div to card-body div
    
    - Delete whatever is in the div that contains the card
    - Show the div that contains the card
    - Add the card to the div that contains it.


If a user is signed in
    - show the favorites drop down
    - If that user has favorites in the database
        - Call the function to populate the dropdown with buttons.

When a user clicks the favorite icon next to a resort 
    - Call function to add that resort to the database
    - Call function to populate the dropdown.

When a user clicks the unfavorite icon next to a favorited resort.
    - Call function to delete that resort from database
    - Call function to populate the dropdown